{"version":3,"sources":["components/MainNavigation.js","components/search.svg","components/SearchForm.js","components/Image.js","components/NotFound.js","components/PagesButton.js","components/Pages.js","components/Galery.js","components/404.jpg","components/E404.js","App.js","registerServiceWorker.js","index.js"],"names":["MainNavigation","props","HandleClick","links","setSafeSearch","safeSearch","setImagesPerPage","numberOfImagesPerPage","className","onChange","defaultValue","value","map","link","index","onClick","exact","to","toLowerCase","SearchForm","HandleSearch","searchQuery","onSubmit","id","type","name","placeholder","required","src","SearchIcon","alt","Image","url","title","HandleImageClick","NotFound","PagesButton","setPage","curentPage","text","disabled","hide","Pages","numberOfPages","aria-label","Galery","amountOfResults","buildFlikerUrl","images","loading","length","allImages","image","E404","IMG404","allowSearch","PageChange","App","HandleMainNavigationVisit","event","target","textContent","setLoading","photoIndex","getAttribute","setState","isOpen","safeSearchSetting","ImagesPerPageSetting","console","log","preventDefault","querySelector","history","push","preformSearch","query","page","state","apiKey","SearchUrl","replace","axios","get","then","response","data","photos","photo","total","pages","catch","error","pageToSet","Number","process","navLinks","farm","server","secret","this","mainSrc","nextSrc","prevSrc","imageTitle","imageCaption","onCloseRequest","onMovePrevRequest","onMoveNextRequest","from","path","render","match","params","component","Component","withRouter","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","basename","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2337a469.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n\nfunction MainNavigation(props) {\n  // returns a navigation with links pragmatically from an array of strings\n  const { HandleClick, links, setSafeSearch, safeSearch, setImagesPerPage, numberOfImagesPerPage} = props;\n  return(\n    <nav className=\"main-nav\">\n      <div className=\"settings_container\">\n        <div className=\"settings_item\">\n          Safe Search:&nbsp;\n          <select onChange={setSafeSearch} defaultValue={safeSearch}>\n            <option value=\"1\">Safe</option>\n            <option value=\"2\">Moderate</option>\n            <option value=\"3\">Restricted</option>\n          </select>\n        </div>\n        <div className=\"settings_item\">\n          Results per Page:&nbsp;\n          <select onChange={setImagesPerPage} defaultValue={numberOfImagesPerPage}>\n            <option value=\"20\">20</option>\n            <option value=\"40\">40</option>\n            <option value=\"80\">80</option>\n            <option value=\"120\">120</option>\n          </select>\n        </div>\n      </div>\n      <ul>\n        {\n          links.map( (link, index) =>\n            <li key={index} onClick={HandleClick} >\n              <NavLink exact to={`/${link.toLowerCase()}`}>{link}</NavLink>\n            </li>\n          )\n        }\n      </ul>\n    </nav>\n  );\n}\n\nMainNavigation.propTypes = {\n  links: PropTypes.array.isRequired,\n  HandleClick: PropTypes.func.isRequired,\n  setSafeSearch: PropTypes.func.isRequired,\n  setImagesPerPage: PropTypes.func.isRequired\n};\n\nexport default MainNavigation;\n","export default __webpack_public_path__ + \"static/media/search.ca910276.svg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"./search.svg\";\n\nfunction SearchForm(props) {\n  // returns a search form\n  const { HandleSearch, searchQuery } = props;\n  return (\n    <form className=\"search-form\" onSubmit={HandleSearch}>\n      <input\n        id=\"SearchQuery\"\n        type=\"search\"\n        name=\"search\"\n        placeholder=\"Search\"\n        defaultValue={searchQuery}\n        required/>\n      <button type=\"submit\" className=\"search-button\">\n        <img src={SearchIcon} alt=\"SearchIcon\" />\n      </button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  HandleSearch: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// returns one image\nfunction Image(props) {\n  const { url, title, index, HandleImageClick } = props;\n  return(\n    <li>\n      <img src={url} title={title} index={index} alt={title} onClick={HandleImageClick}/>\n    </li>\n  );\n}\n\nImage.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  HandleImageClick: PropTypes.func.isRequired\n};\n\nexport default Image;\n","import React from \"react\";\n\n// returns a not found page\nfunction NotFound(props){\n  const {title} = props;\n  return(\n    <div className=\"not-found\">\n      <h3>No Results Found</h3>\n      <p>You search for <strong>{title}</strong> did not return any results. Please try again.</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n// Returns a button to change the page\nfunction PagesButton(props) {\n  const { setPage, searchQuery, curentPage, text, value, className, disabled, hide} = props;\n  return (\n    <li className={`change-page_button-container ${hide? \"hide\" : null}`}>\n      {disabled?\n        <NavLink value={value} className={`change-page_button-button ${className}`} to={`/${searchQuery}/${curentPage}`}>{text}</NavLink>\n        :\n        <NavLink onClick={setPage} value={value} className={`change-page_button-button ${className}`} to={`/${searchQuery}/${value}`}>{text}</NavLink>\n      }\n    </li>\n  );\n}\n\nPagesButton.propTypes = {\n  setPage: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  text: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  value: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  hide: PropTypes.bool\n};\n\nexport default PagesButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PagesButton from \"./PagesButton\";\n\n\n// Returns a list a page selector\nfunction Pages(props) {\n  const {numberOfPages, curentPage, setPage, searchQuery} = props;\n  return (\n    <nav aria-label=\"Page navigation\">\n      <ul className=\"change-page_list\">\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text=\"Previous\" value={curentPage-1} disabled={curentPage<=1? true : false}/>\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage-2} value={curentPage-2} hide={numberOfPages>curentPage} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage-1} value={curentPage-1} hide={curentPage<=1} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage} value={curentPage}/>\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage+1} value={curentPage+1} hide={curentPage>=numberOfPages} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage+2} value={curentPage+2} hide={curentPage>1} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text=\"Next\" value={curentPage+1} disabled={numberOfPages<=curentPage? true : false}/>\n      </ul>\n    </nav>\n  );\n}\n\nPages.propTypes = {\n  numberOfPages: PropTypes.number.isRequired,\n  curentPage: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired\n};\n\nexport default Pages;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"./Image\";\nimport NotFound from \"./NotFound\";\nimport Pages from \"./Pages\";\n\n\nfunction Galery(props) {\n\n  const {\n    amountOfResults,\n    buildFlikerUrl,\n    curentPage,\n    HandleImageClick,\n    images,\n    loading,\n    numberOfPages,\n    searchQuery,\n    setPage,\n    title\n  } = props;\n\n  // if the application is loading it will return a loading screen\n  if(loading){\n    return( <p>loading...</p> );\n  }\n\n  // is there are no results it will return no results warning\n  let gotResults = images.length > 0;\n  if(!gotResults){\n    return( <NotFound title={title} /> );\n  }\n\n  const allImages = images.map((image, index) => (\n    <Image\n      url={buildFlikerUrl(image)}\n      title={image.title}\n      key={image.id}\n      index={index}\n      HandleImageClick={HandleImageClick}\n    />\n  ));\n\n  return (\n    <div className=\"photo-container\">\n      <h2>{title}</h2>\n      <small>Total Results: {amountOfResults}</small>\n      <ul className=\"photo-results\">{allImages}</ul>\n      <Pages numberOfPages={numberOfPages} curentPage={curentPage} setPage={setPage} searchQuery={searchQuery}/>\n    </div>\n  );\n\n}\n\nGalery.propTypes = {\n  amountOfResults: PropTypes.string.isRequired,\n  buildFlikerUrl: PropTypes.func.isRequired,\n  curentPage: PropTypes.number.isRequired,\n  HandleImageClick: PropTypes.func.isRequired,\n  images: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  numberOfPages: PropTypes.number.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  setPage: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default Galery;\n","export default __webpack_public_path__ + \"static/media/404.bbea2c44.jpg\";","import React from \"react\";\nimport IMG404 from \"./404.jpg\";\n\n// returns a 404 error\nfunction E404() {\n  return (\n    <ul>\n      <li className=\"not-found\">\n        <h1>404 someone took this page</h1>\n        <img src={IMG404} alt=\"Error 404 Page Not Found\" />\n      </li>\n    </ul>\n  );\n}\n\nexport default E404;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// lightbox\nimport Lightbox from \"lightbox-react\";\nimport \"lightbox-react/style.css\"; // This only needs to be imported once in your app\n\n//Application Components\nimport MainNavigation from \"./components/MainNavigation\";\nimport SearchForm from \"./components/SearchForm\";\nimport Galery from \"./components/Galery\";\n\nimport E404 from \"./components/E404\";\n\n\nlet allowSearch = true;\nlet PageChange = false;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiKey: process.env.REACT_APP_FLICKR_API_KEY,\n      navLinks: [\"Cats\", \"Dogs\", \"Computers\", \"Coffee\"],\n      numberOfImagesPerPage: 40,\n      numberOfPages: 0,\n      curentPage: 1,\n      safeSearch: 1,\n      images: [],\n      amountOfResults: \"0\",\n      loading: true,\n      searchQuery: \"\",\n      photoIndex: 0,\n      isOpen: false\n    };\n  }\n\n// numberOfImagesPerPage setting\n// How may images to load per page\n\n\n// Safe search setting:\n// 1 for safe.\n// 2 for moderate.\n// 3 for restricted.\n\n  HandleMainNavigationVisit = (event) => {\n    const searchQuery = event.target.textContent.toLowerCase();\n    this.setLoading(searchQuery);\n  }\n\n\n  buildFlikerUrl(image){\n    return(`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`);\n  }\n\n  HandleImageClick = (event) => {\n    const photoIndex = event.target.getAttribute(\"index\");\n    this.setState({\n      isOpen: true,\n      photoIndex: photoIndex\n    });\n  }\n\n  setSafeSearch = (event) => {\n    const safeSearchSetting = event.target.value;\n    // console.log(safeSearchSetting);\n    PageChange = true;\n    this.setState({ safeSearch: safeSearchSetting });\n  }\n\n  setImagesPerPage = (event) => {\n    const ImagesPerPageSetting = event.target.value;\n    console.log(ImagesPerPageSetting);\n    PageChange = true;\n    this.setState({ numberOfImagesPerPage: ImagesPerPageSetting });\n  }\n\n\n// if the search query is different from the current one it will set the state to be loading and send the browser to the new search\n  HandleSearch = (event) => {\n    event.preventDefault();\n    const searchQuery = event.target.querySelector(\"#SearchQuery\").value.toLowerCase();\n    if( this.setLoading(searchQuery)){\n      this.props.history.push(`/${searchQuery}`);\n    }\n  }\n\n  // preformSearch requests data from flickr then sets the loading state to be false\n  preformSearch = (query, page) => {\n    // console.log(\"Search query is different from the current one:\", query !== this.state.searchQuery, query, this.state.searchQuery)\n    // console.log(\"Program is allowed to search for images on api:\", allowSearch)\n    const { apiKey, safeSearch, numberOfImagesPerPage } = this.state;\n    if(((query !== this.state.searchQuery) && allowSearch)||PageChange){\n      allowSearch = false;\n      PageChange = false;\n      const SearchUrl =\n        `\n          https://api.flickr.com/services/rest/\n          ?method=flickr.photos.search\n          &api_key=${apiKey}\n          &safe_search=${safeSearch}\n          &per_page=${numberOfImagesPerPage}\n          &format=json\n          &nojsoncallback=1\n          &tags=${query}\n          &page=${page}\n        `.replace(/\\s+/g, \"\");// This will remove the spaces from the multi-line code indentation //\n\n      axios\n      .get(SearchUrl)\n      .then((response) => {\n        // console.log(response.data);\n        this.setState( (state, props) => ({\n          images: response.data.photos.photo,\n          amountOfResults: response.data.photos.total,\n          numberOfPages: response.data.photos.pages,\n          loading: false,\n          searchQuery: query\n        }));\n        allowSearch = true;\n      })\n      .catch((error) => {\n        // handle error\n        // console.log(\"Error Getting DATA\", error);\n      });\n    }\n  };\n\n  //setLoading sets the state to be loading\n  setLoading = (searchQuery) => {\n    if(searchQuery !== this.state.searchQuery){\n      this.setState({ loading: true });\n      return true;\n    }\n    return false;\n  };\n\n  setPage = (event) => {\n    PageChange = true;\n    const pageToSet = Number(event.target.value);\n    // console.log(\"im setting the page to a type of: \", typeof(pageToSet))\n    // console.log(\"page set to:\", pageToSet);\n    this.setState({ curentPage: pageToSet });\n  }\n\n\n\n  render() {\n    const { photoIndex, isOpen, images, amountOfResults, numberOfPages, searchQuery, navLinks, loading, numberOfImagesPerPage, safeSearch } = this.state;\n    return (\n      <div className=\"container size-101vh\">\n        <h1>Flickr Search Engine</h1>\n        {isOpen && (\n          <Lightbox\n            mainSrc={this.buildFlikerUrl(images[photoIndex])}\n            nextSrc={this.buildFlikerUrl(images[(photoIndex + 1) % images.length])}\n            prevSrc={this.buildFlikerUrl(images[(photoIndex + images.length - 1) % images.length])}\n            imageTitle={images[photoIndex].title}\n            imageCaption={images[photoIndex].title}\n            onCloseRequest={() => this.setState({ isOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length,\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length,\n              })\n            }\n          />\n        )}\n\n        <SearchForm \n          HandleSearch={this.HandleSearch}\n          searchQuery={this.searchQuery}\n        />\n        <MainNavigation\n          links={navLinks}\n          HandleClick={this.HandleMainNavigationVisit}\n          setSafeSearch={this.setSafeSearch}\n          safeSearch={safeSearch}\n          setImagesPerPage={this.setImagesPerPage}\n          numberOfImagesPerPage={numberOfImagesPerPage}\n        />\n        <Switch>\n\n          {/*If you visit the root page it will take you to the cats page*/}\n          <Redirect exact from=\"/\" to=\"/cats\"/>\n\n          {/*If you search without having a page set you will default to page one*/}\n          <Redirect exact from=\"/:query\" to=\"/:query/1\"/>\n\n          {/*Any path in the root directory will preform a search*/}\n          <Route exact path=\"/:query/:page?\" render= { ({match}) => {\n            this.preformSearch(match.params.query, match.params.page);\n            return(\n              <Galery\n                amountOfResults={amountOfResults}\n                buildFlikerUrl={this.buildFlikerUrl}\n                curentPage={Number(match.params.page)}\n                HandleImageClick={this.HandleImageClick}\n                images={images}\n                loading={loading}\n                numberOfPages={numberOfPages}\n                searchQuery={searchQuery}\n                setPage={this.setPage}\n                title={searchQuery}\n              />\n            );\n          }}/>\n\n          {/*any route like /:query/something will give a 404 error*/}\n          <Route component={E404} />\n\n        </Switch>\n      </div>\n    );\n  }\n} //End of App\n\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\n\nReactDOM.render(\n  <BrowserRouter basename=\"/techdegree-project-11\">\n    <App/>\n  </BrowserRouter>\n  ,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}