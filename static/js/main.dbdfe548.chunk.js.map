{"version":3,"sources":["components/search.svg","components/404.jpg","components/MainNavigation.js","components/SearchForm.js","components/Image.js","components/NotFound.js","components/PagesButton.js","components/Pages.js","components/Galery.js","components/E404.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MainNavigation","props","HandleClick","links","setSafeSearch","safeSearch","setImagesPerPage","numberOfImagesPerPage","react_default","a","createElement","className","onChange","defaultValue","value","map","link","index","key","onClick","react_router_dom","exact","to","concat","toLowerCase","SearchForm","HandleSearch","searchQuery","onSubmit","id","type","name","placeholder","required","src","SearchIcon","alt","Image","url","title","HandleImageClick","NotFound","PagesButton","setPage","curentPage","text","disabled","hide","Pages","numberOfPages","aria-label","components_PagesButton","Galery","amountOfResults","buildFlikerUrl","images","loading","length","components_NotFound","allImages","image","components_Image","components_Pages","E404","IMG404","allowSearch","PageChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","HandleMainNavigationVisit","event","target","textContent","setLoading","photoIndex","getAttribute","setState","isOpen","safeSearchSetting","ImagesPerPageSetting","console","log","preventDefault","querySelector","history","push","preformSearch","query","page","_this$state","state","apiKey","SearchUrl","replace","axios","get","then","response","data","photos","photo","total","pages","catch","error","pageToSet","Number","process","navLinks","farm","server","secret","_this2","_this$state2","main_default","mainSrc","nextSrc","prevSrc","imageTitle","imageCaption","onCloseRequest","onMovePrevRequest","onMoveNextRequest","components_SearchForm","components_MainNavigation","react_router","from","path","render","_ref","match","params","components_Galery","component","Component","withRouter","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","basename","src_App_0","document","getElementById","URL","origin","addEventListener","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.dbdfe548.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.ede91782.svg\";","module.exports = __webpack_public_path__ + \"static/media/404.9e8c8c00.jpg\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n\nfunction MainNavigation(props) {\n  // returns a navigation with links pragmatically from an array of strings\n  const { HandleClick, links, setSafeSearch, safeSearch, setImagesPerPage, numberOfImagesPerPage} = props;\n  return(\n    <nav className=\"main-nav\">\n      <div className=\"settings_container\">\n        <div className=\"settings_item\">\n          Safe Search:&nbsp;\n          <select onChange={setSafeSearch} defaultValue={safeSearch}>\n            <option value=\"1\">Safe</option>\n            <option value=\"2\">Moderate</option>\n            <option value=\"3\">Restricted</option>\n          </select>\n        </div>\n        <div className=\"settings_item\">\n          Results per Page:&nbsp;\n          <select onChange={setImagesPerPage} defaultValue={numberOfImagesPerPage}>\n            <option value=\"20\">20</option>\n            <option value=\"40\">40</option>\n            <option value=\"80\">80</option>\n            <option value=\"120\">120</option>\n          </select>\n        </div>\n      </div>\n      <ul>\n        {\n          links.map( (link, index) =>\n            <li key={index} onClick={HandleClick} >\n              <NavLink exact to={`/${link.toLowerCase()}`}>{link}</NavLink>\n            </li>\n          )\n        }\n      </ul>\n    </nav>\n  );\n}\n\nMainNavigation.propTypes = {\n  links: PropTypes.array.isRequired,\n  HandleClick: PropTypes.func.isRequired,\n  setSafeSearch: PropTypes.func.isRequired,\n  setImagesPerPage: PropTypes.func.isRequired\n};\n\nexport default MainNavigation;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"./search.svg\";\n\nfunction SearchForm(props) {\n  // returns a search form\n  const { HandleSearch, searchQuery } = props;\n  return (\n    <form className=\"search-form\" onSubmit={HandleSearch}>\n      <input\n        id=\"SearchQuery\"\n        type=\"search\"\n        name=\"search\"\n        placeholder=\"Search\"\n        defaultValue={searchQuery}\n        required/>\n      <button type=\"submit\" className=\"search-button\">\n        <img src={SearchIcon} alt=\"SearchIcon\" />\n      </button>\n    </form>\n  );\n}\n\nSearchForm.propTypes = {\n  HandleSearch: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string\n};\n\nexport default SearchForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// returns one image\nfunction Image(props) {\n  const { url, title, index, HandleImageClick } = props;\n  return(\n    <li>\n      <img src={url} title={title} index={index} alt={title} onClick={HandleImageClick}/>\n    </li>\n  );\n}\n\nImage.propTypes = {\n  title: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  HandleImageClick: PropTypes.func.isRequired\n};\n\nexport default Image;\n","import React from \"react\";\n\n// returns a not found page\nfunction NotFound(props){\n  const {title} = props;\n  return(\n    <div className=\"not-found\">\n      <h3>No Results Found</h3>\n      <p>You search for <strong>{title}</strong> did not return any results. Please try again.</p>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n// Returns a button to change the page\nfunction PagesButton(props) {\n  const { setPage, searchQuery, curentPage, text, value, className, disabled, hide} = props;\n  return (\n    <li className={`change-page_button-container ${hide? \"hide\" : null}`}>\n      {disabled?\n        <NavLink value={value} className={`change-page_button-button ${className}`} to={`/${searchQuery}/${curentPage}`}>{text}</NavLink>\n        :\n        <NavLink onClick={setPage} value={value} className={`change-page_button-button ${className}`} to={`/${searchQuery}/${value}`}>{text}</NavLink>\n      }\n    </li>\n  );\n}\n\nPagesButton.propTypes = {\n  setPage: PropTypes.func.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  text: PropTypes.oneOfType([ PropTypes.string, PropTypes.number ]),\n  value: PropTypes.number.isRequired,\n  className: PropTypes.string,\n  disabled: PropTypes.bool,\n  hide: PropTypes.bool\n};\n\nexport default PagesButton;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PagesButton from \"./PagesButton\";\n\n\n// Returns a list a page selector\nfunction Pages(props) {\n  const {numberOfPages, curentPage, setPage, searchQuery} = props;\n  return (\n    <nav aria-label=\"Page navigation\">\n      <ul className=\"change-page_list\">\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text=\"Previous\" value={curentPage-1} disabled={curentPage<=1? true : false}/>\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage-2} value={curentPage-2} hide={numberOfPages>curentPage} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage-1} value={curentPage-1} hide={curentPage<=1} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage} value={curentPage}/>\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage+1} value={curentPage+1} hide={curentPage>=numberOfPages} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text={curentPage+2} value={curentPage+2} hide={curentPage>1} />\n        <PagesButton setPage={setPage} searchQuery={searchQuery} curentPage={curentPage} text=\"Next\" value={curentPage+1} disabled={numberOfPages<=curentPage? true : false}/>\n      </ul>\n    </nav>\n  );\n}\n\nPages.propTypes = {\n  numberOfPages: PropTypes.number.isRequired,\n  curentPage: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired\n};\n\nexport default Pages;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Image from \"./Image\";\nimport NotFound from \"./NotFound\";\nimport Pages from \"./Pages\";\n\n\nfunction Galery(props) {\n\n  const {\n    amountOfResults,\n    buildFlikerUrl,\n    curentPage,\n    HandleImageClick,\n    images,\n    loading,\n    numberOfPages,\n    searchQuery,\n    setPage,\n    title\n  } = props;\n\n  // if the application is loading it will return a loading screen\n  if(loading){\n    return( <p>loading...</p> );\n  }\n\n  // is there are no results it will return no results warning\n  let gotResults = images.length > 0;\n  if(!gotResults){\n    return( <NotFound title={title} /> );\n  }\n\n  const allImages = images.map((image, index) => (\n    <Image\n      url={buildFlikerUrl(image)}\n      title={image.title}\n      key={image.id}\n      index={index}\n      HandleImageClick={HandleImageClick}\n    />\n  ));\n\n  return (\n    <div className=\"photo-container\">\n      <h2>{title}</h2>\n      <small>Total Results: {amountOfResults}</small>\n      <ul className=\"photo-results\">{allImages}</ul>\n      <Pages numberOfPages={numberOfPages} curentPage={curentPage} setPage={setPage} searchQuery={searchQuery}/>\n    </div>\n  );\n\n}\n\nGalery.propTypes = {\n  amountOfResults: PropTypes.string.isRequired,\n  buildFlikerUrl: PropTypes.func.isRequired,\n  curentPage: PropTypes.number.isRequired,\n  HandleImageClick: PropTypes.func.isRequired,\n  images: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  numberOfPages: PropTypes.number.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n  setPage: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired\n};\n\nexport default Galery;\n","import React from \"react\";\nimport IMG404 from \"./404.jpg\";\n\n// returns a 404 error\nfunction E404() {\n  return (\n    <ul>\n      <li className=\"not-found\">\n        <h1>404 someone took this page</h1>\n        <img src={IMG404} alt=\"Error 404 Page Not Found\" />\n      </li>\n    </ul>\n  );\n}\n\nexport default E404;\n","import React, { Component } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\n// lightbox\nimport Lightbox from \"lightbox-react\";\nimport \"lightbox-react/style.css\"; // This only needs to be imported once in your app\n\n//Application Components\nimport MainNavigation from \"./components/MainNavigation\";\nimport SearchForm from \"./components/SearchForm\";\nimport Galery from \"./components/Galery\";\n\nimport E404 from \"./components/E404\";\n\n\nlet allowSearch = true;\nlet PageChange = false;\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      apiKey: process.env.REACT_APP_FLICKR_API_KEY,\n      navLinks: [\"Cats\", \"Dogs\", \"Computers\", \"Coffee\"],\n      numberOfImagesPerPage: 40,\n      numberOfPages: 0,\n      curentPage: 1,\n      safeSearch: 1,\n      images: [],\n      amountOfResults: \"0\",\n      loading: true,\n      searchQuery: \"\",\n      photoIndex: 0,\n      isOpen: false\n    };\n  }\n\n// numberOfImagesPerPage setting\n// How may images to load per page\n\n\n// Safe search setting:\n// 1 for safe.\n// 2 for moderate.\n// 3 for restricted.\n\n  HandleMainNavigationVisit = (event) => {\n    const searchQuery = event.target.textContent.toLowerCase();\n    this.setLoading(searchQuery);\n  }\n\n\n  buildFlikerUrl(image){\n    return(`https://farm${image.farm}.staticflickr.com/${image.server}/${image.id}_${image.secret}.jpg`);\n  }\n\n  HandleImageClick = (event) => {\n    const photoIndex = event.target.getAttribute(\"index\");\n    this.setState({\n      isOpen: true,\n      photoIndex: photoIndex\n    });\n  }\n\n  setSafeSearch = (event) => {\n    const safeSearchSetting = event.target.value;\n    // console.log(safeSearchSetting);\n    PageChange = true;\n    this.setState({ safeSearch: safeSearchSetting });\n  }\n\n  setImagesPerPage = (event) => {\n    const ImagesPerPageSetting = event.target.value;\n    console.log(ImagesPerPageSetting);\n    PageChange = true;\n    this.setState({ numberOfImagesPerPage: ImagesPerPageSetting });\n  }\n\n\n// if the search query is different from the current one it will set the state to be loading and send the browser to the new search\n  HandleSearch = (event) => {\n    event.preventDefault();\n    const searchQuery = event.target.querySelector(\"#SearchQuery\").value.toLowerCase();\n    if( this.setLoading(searchQuery)){\n      this.props.history.push(`/${searchQuery}`);\n    }\n  }\n\n  // preformSearch requests data from flickr then sets the loading state to be false\n  preformSearch = (query, page) => {\n    // console.log(\"Search query is different from the current one:\", query !== this.state.searchQuery, query, this.state.searchQuery)\n    // console.log(\"Program is allowed to search for images on api:\", allowSearch)\n    const { apiKey, safeSearch, numberOfImagesPerPage } = this.state;\n    if(((query !== this.state.searchQuery) && allowSearch)||PageChange){\n      allowSearch = false;\n      PageChange = false;\n      const SearchUrl =\n        `\n          https://api.flickr.com/services/rest/\n          ?method=flickr.photos.search\n          &api_key=${apiKey}\n          &safe_search=${safeSearch}\n          &per_page=${numberOfImagesPerPage}\n          &format=json\n          &nojsoncallback=1\n          &tags=${query}\n          &page=${page}\n        `.replace(/\\s+/g, \"\");// This will remove the spaces from the multi-line code indentation //\n\n      axios\n      .get(SearchUrl)\n      .then((response) => {\n        // console.log(response.data);\n        this.setState( (state, props) => ({\n          images: response.data.photos.photo,\n          amountOfResults: response.data.photos.total,\n          numberOfPages: response.data.photos.pages,\n          loading: false,\n          searchQuery: query\n        }));\n        allowSearch = true;\n      })\n      .catch((error) => {\n        // handle error\n        // console.log(\"Error Getting DATA\", error);\n      });\n    }\n  };\n\n  //setLoading sets the state to be loading\n  setLoading = (searchQuery) => {\n    if(searchQuery !== this.state.searchQuery){\n      this.setState({ loading: true });\n      return true;\n    }\n    return false;\n  };\n\n  setPage = (event) => {\n    PageChange = true;\n    const pageToSet = Number(event.target.value);\n    // console.log(\"im setting the page to a type of: \", typeof(pageToSet))\n    // console.log(\"page set to:\", pageToSet);\n    this.setState({ curentPage: pageToSet });\n  }\n\n\n\n  render() {\n    const { photoIndex, isOpen, images, amountOfResults, numberOfPages, searchQuery, navLinks, loading, numberOfImagesPerPage, safeSearch } = this.state;\n    return (\n      <div className=\"container size-101vh\">\n        <h1>Flickr Search Engine</h1>\n        {isOpen && (\n          <Lightbox\n            mainSrc={this.buildFlikerUrl(images[photoIndex])}\n            nextSrc={this.buildFlikerUrl(images[(photoIndex + 1) % images.length])}\n            prevSrc={this.buildFlikerUrl(images[(photoIndex + images.length - 1) % images.length])}\n            imageTitle={images[photoIndex].title}\n            imageCaption={images[photoIndex].title}\n            onCloseRequest={() => this.setState({ isOpen: false })}\n            onMovePrevRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + images.length - 1) % images.length,\n              })\n            }\n            onMoveNextRequest={() =>\n              this.setState({\n                photoIndex: (photoIndex + 1) % images.length,\n              })\n            }\n          />\n        )}\n\n        <SearchForm \n          HandleSearch={this.HandleSearch}\n          searchQuery={this.searchQuery}\n        />\n        <MainNavigation\n          links={navLinks}\n          HandleClick={this.HandleMainNavigationVisit}\n          setSafeSearch={this.setSafeSearch}\n          safeSearch={safeSearch}\n          setImagesPerPage={this.setImagesPerPage}\n          numberOfImagesPerPage={numberOfImagesPerPage}\n        />\n        <Switch>\n\n          {/*If you visit the root page it will take you to the cats page*/}\n          <Redirect exact from=\"/\" to=\"/cats\"/>\n\n          {/*If you search without having a page set you will default to page one*/}\n          <Redirect exact from=\"/:query\" to=\"/:query/1\"/>\n\n          {/*Any path in the root directory will preform a search*/}\n          <Route exact path=\"/:query/:page?\" render= { ({match}) => {\n            this.preformSearch(match.params.query, match.params.page);\n            return(\n              <Galery\n                amountOfResults={amountOfResults}\n                buildFlikerUrl={this.buildFlikerUrl}\n                curentPage={Number(match.params.page)}\n                HandleImageClick={this.HandleImageClick}\n                images={images}\n                loading={loading}\n                numberOfPages={numberOfPages}\n                searchQuery={searchQuery}\n                setPage={this.setPage}\n                title={searchQuery}\n              />\n            );\n          }}/>\n\n          {/*any route like /:query/something will give a 404 error*/}\n          <Route component={E404} />\n\n        </Switch>\n      </div>\n    );\n  }\n} //End of App\n\n\nexport default withRouter(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\n\nReactDOM.render(\n  <BrowserRouter basename=\"/techdegree-project-11\">\n    <App/>\n  </BrowserRouter>\n  ,\n  document.getElementById(\"root\")\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}